# -*- coding: utf-8 -*-
"""Python_final_ProjectSolution_ravi.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/15S-K2tnif_VY5zt5qobWSHE6geqol0zI
"""

from google.colab import files
data = files.upload()

import pandas as pd

from google.colab import files
data2 = files.upload()

from google.colab import files
data3 = files.upload()

#headers for each dataframe 
mycustomers_list = ['custno','firstname','lastname','gender','age','profession','contactNo',
'emailId','city','state','isActive','createdDate','UpdatedDate']
products_list=['productno','productName','Description','isActive','createdDate','UpdatedDate']
transactions_header = ['txnno', 'txndate','custno', 'amount','productno', 'spendby']

#dataframe creation and applying header for it 
customers_ = pd.read_csv('customers (1).csv',names=mycustomers_list)
products_ = pd.read_csv('products.csv',names=products_list)
transactions_ = pd.read_csv('transactions.csv',names=transactions_header)

#usecase no 1
customers_.head()

#usecase no 1
products_.head()

#usecase no 1
transactions_.head()

#usecase no 02 here is i am unable to fetch only those customers but i got the bool value of all of it 
usecases_2 = transactions_.groupby('custno').count()
usecases_2
counted = usecases_2>=4
usecases_2.loc[(usecases_2['productno'] >= 4)]
#ed

#usecase no 02  i did it with diffrent logic for only those customers who purchased more than 3 products 
#here 2nd column is actully count of purchase
from numpy.ma.core import count
usecases_2 = transactions_.groupby('custno').agg({'custno':'count'})
df2 = usecases_2.loc[(usecases_2['custno'] >= 4)]
df2

#usecase no 3
usecases_3 = transactions_.groupby('productno').count()
counted = usecases_3.sort_values(by = 'custno', ascending =False)
#counted.head()
counted.head()

#usecase no 4
usecases_4 = transactions_.groupby('amount').count()
counted = usecases_4.sort_values(by ='custno', ascending =False)
counted.head()

#usecase no 5
usecases_5 =customers_['profession'].unique()
print('unique professions of customers are ...', usecases_5)
print('total unique professions of cutomers are ', len(usecases_5))

#usecase no 6
high_age=customers_['age'].max()
print("highest age amoung the customer's database is ",high_age)

customer_df1 = customers_[['custno','gender','age','profession','contactNo',]]
product_df1 =products_[['productno','productName']]
transactions_df1=transactions_[['txndate','spendby','amount']]

# usecase no 07
x = pd.concat([customer_df1,product_df1,transactions_df1],axis =1)
x.set_index('custno',inplace =True)
x.iloc[int(input('enter customer number '))-1]

from google.colab import files
psv = files.upload()

#usecase 08
psv_customers_df = pd.read_csv('customers.txt',sep='|',names=mycustomers_list)
psv_customers_df.head()

from google.colab import files
psv2 = files.upload()

#usecase 08
psv_products_df = pd.read_csv('products.txt',sep = '|',names=products_list)
psv_products_df.head()

from google.colab import files
psv3 = files.upload()

#usecase 08
psv_transactions_df = pd.read_csv('transactions.txt',sep='|',names=transactions_header)
psv_transactions_df.head()

from google.colab import files
json1 =files.upload()

#usecase no 09
df_products_json = pd.read_json('products.json',lines= True)
df_products_json.head()

from google.colab import files
json2 =files.upload()

#usecase no 09
df_customers_json = pd.read_json('customers (2).json',lines=True)
df_customers_json.head()

from google.colab import files
json3 =files.upload()

#usecase no 9
df_transactions_json = pd.read_json('transactions.json',lines = True)
df_transactions_json.head()

from google.colab import files
xml1 =files.upload()

#usecase no 10
df_customers_xml = pd.read_xml('customers.xml')
df_customers_xml.head()

from google.colab import files
xml2 =files.upload()

#usecase no 10
df_products_xml = pd.read_xml('products.xml')
df_products_xml.head()

from google.colab import files
xml3 =files.upload()

#usecase no 10
df_transactions_xml = pd.read_xml('transactions.xml')
df_transactions_xml.head()